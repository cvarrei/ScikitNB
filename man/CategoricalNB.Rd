% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CategoricalNB.R
\name{CategoricalNB}
\alias{CategoricalNB}
\title{Initialize Categorical Naive Bayes Classifier}
\description{
Initialize Categorical Naive Bayes Classifier

Initialize Categorical Naive Bayes Classifier
}
\examples{

## ------------------------------------------------
## Method `CategoricalNB$new`
## ------------------------------------------------

# Initialize the Categorical Naive Bayes Classifier with verbose output
catnb <- CategoricalNB$new()


## ------------------------------------------------
## Method `CategoricalNB$preprocessing_train`
## ------------------------------------------------

Assuming 'X_train' is your explanatory variables
and 'y_train' the target variable.
catNB <- CategoricalNB$new()
list_catNB <- catNB$preprocessing_train(X_train,y_train)
X_train_d <- list_catNB[[1]]
y_train <- list_catNB[[2]]


## ------------------------------------------------
## Method `CategoricalNB$preprocessing_test`
## ------------------------------------------------

Assuming 'X_test' is your explanatory variables

X_test_d <- catNB$preprocessing_test(X_test)


## ------------------------------------------------
## Method `CategoricalNB$fit`
## ------------------------------------------------

Assuming 'X_train' is your preprocessed training dataset
and 'y_train'is your training target.

catNB$fit(X_train, y_train)


## ------------------------------------------------
## Method `CategoricalNB$predict`
## ------------------------------------------------

Assuming 'X_test' is your preprocessed test dataset
Ensure that the model has been trained using fit method

y_pred <- catnb$predict(X_test)


## ------------------------------------------------
## Method `CategoricalNB$predict_log_proba`
## ------------------------------------------------

Assuming 'X_test' is your preprocessed test dataset
logs_probas <- catnb$predict_log_proba(X_test)


## ------------------------------------------------
## Method `CategoricalNB$predict_proba`
## ------------------------------------------------

Assuming 'X_test' is your preprocessed test dataset
probas <- catnb$predict_proba(X_test)


## ------------------------------------------------
## Method `CategoricalNB$print`
## ------------------------------------------------

# Assuming the Categorical Naive Bayes model has been trained

catnb$print()

# OR

print(catnb)


## ------------------------------------------------
## Method `CategoricalNB$summary`
## ------------------------------------------------

# Assuming the Categorical Naive Bayes model has been trained

catnb$summary()

# OR

summary(catnb)


## ------------------------------------------------
## Method `CategoricalNB$score`
## ------------------------------------------------

# Assuming 'X_test' and 'y_test' are your test dataset and labels
# Ensure that the model has been trained using fit method

results <- catnb$score(X_test, y_test)


## ------------------------------------------------
## Method `CategoricalNB$plot_confusionmatrix`
## ------------------------------------------------

# Assuming 'X_test' and 'y_test' are your preprocessed test dataset and actual labels

catnb$plot_confusionmatrix(X_test, y_test)


## ------------------------------------------------
## Method `CategoricalNB$plot_roccurve`
## ------------------------------------------------

# Assuming 'X_test' and 'y_test' are your preprocessed test dataset and actual labels
# This is the case of a binary classification

catnb$plot_roccurve(X_test, y_test, positive = "YourPositiveClassLabel")

}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-CategoricalNB-new}{\code{CategoricalNB$new()}}
\item \href{#method-CategoricalNB-preprocessing_train}{\code{CategoricalNB$preprocessing_train()}}
\item \href{#method-CategoricalNB-preprocessing_test}{\code{CategoricalNB$preprocessing_test()}}
\item \href{#method-CategoricalNB-fit}{\code{CategoricalNB$fit()}}
\item \href{#method-CategoricalNB-predict}{\code{CategoricalNB$predict()}}
\item \href{#method-CategoricalNB-predict_log_proba}{\code{CategoricalNB$predict_log_proba()}}
\item \href{#method-CategoricalNB-predict_proba}{\code{CategoricalNB$predict_proba()}}
\item \href{#method-CategoricalNB-print}{\code{CategoricalNB$print()}}
\item \href{#method-CategoricalNB-summary}{\code{CategoricalNB$summary()}}
\item \href{#method-CategoricalNB-score}{\code{CategoricalNB$score()}}
\item \href{#method-CategoricalNB-plot_confusionmatrix}{\code{CategoricalNB$plot_confusionmatrix()}}
\item \href{#method-CategoricalNB-plot_roccurve}{\code{CategoricalNB$plot_roccurve()}}
\item \href{#method-CategoricalNB-clone}{\code{CategoricalNB$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CategoricalNB-new"></a>}}
\if{latex}{\out{\hypertarget{method-CategoricalNB-new}{}}}
\subsection{Method \code{new()}}{
This method initializes an instance of the Categorical Naive Bayes Classifier.
It sets up the environment  to be used for computation and optionally provides
instructions for using the classifier.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CategoricalNB$new(verbose = T)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verbose}}{A logical value indicating whether to print detailed messages
about the initialization process. Default is TRUE.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
When `verbose` is TRUE, the function prints
         instructions on the console for preprocessing and using the classifier.
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# Initialize the Categorical Naive Bayes Classifier with verbose output
catnb <- CategoricalNB$new()

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CategoricalNB-preprocessing_train"></a>}}
\if{latex}{\out{\hypertarget{method-CategoricalNB-preprocessing_train}{}}}
\subsection{Method \code{preprocessing_train()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CategoricalNB$preprocessing_train(X, y)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{X}}{The explanatory variables.}

\item{\code{y}}{The target variables.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
The discretization of data is an important and essential step in the pre-processing of variables
         continuous before the application of the naive Bayesian categorical model.
         For this, we used the supervised discretization method based on the principle of Minimum
         Description Length Principle (MDLP). The MDLP seeks to find the optimal discretization by minimizing the
         length of the model description while maximizing the separation between classes.
         It may happen, in certain cases, that the MDLP function does not find cutting terminals
         and returns a single category. We have chosen to deal with this case by deleting these columnsas they do not add any information
         for the classification.
         The user will be notified when the summary is displayed.
}

\subsection{Returns}{
A list containing the discretized variables and the y variable.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{Assuming 'X_train' is your explanatory variables
and 'y_train' the target variable.
catNB <- CategoricalNB$new()
list_catNB <- catNB$preprocessing_train(X_train,y_train)
X_train_d <- list_catNB[[1]]
y_train <- list_catNB[[2]]

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CategoricalNB-preprocessing_test"></a>}}
\if{latex}{\out{\hypertarget{method-CategoricalNB-preprocessing_test}{}}}
\subsection{Method \code{preprocessing_test()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CategoricalNB$preprocessing_test(X)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{X}}{The explanatory variables.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
This function will discretize the continuous
        explanatory columns according to the limits learnt
        during the preprocessing on the training sample (preprocessing_train()).
        Be careful, you must first preprocess your training sample.
}

\subsection{Returns}{
The discretized dataframe.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{Assuming 'X_test' is your explanatory variables

X_test_d <- catNB$preprocessing_test(X_test)

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CategoricalNB-fit"></a>}}
\if{latex}{\out{\hypertarget{method-CategoricalNB-fit}{}}}
\subsection{Method \code{fit()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CategoricalNB$fit(X_train, y_train, lmbd = 1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{X_train}}{The explanatory variables.}

\item{\code{y_train}}{The target variables.}

\item{\code{lmbd}}{Optional constant used for Laplace smoothing.
By default 1.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The method does not return anything but updates the model's internal state
        with the training results, including feature statistics and performance metrics.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{Assuming 'X_train' is your preprocessed training dataset
and 'y_train'is your training target.

catNB$fit(X_train, y_train)

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CategoricalNB-predict"></a>}}
\if{latex}{\out{\hypertarget{method-CategoricalNB-predict}{}}}
\subsection{Method \code{predict()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CategoricalNB$predict(data_test)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_test}}{The dataset on which we wish to predict.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The prediction as a dataframe.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{Assuming 'X_test' is your preprocessed test dataset
Ensure that the model has been trained using fit method

y_pred <- catnb$predict(X_test)

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CategoricalNB-predict_log_proba"></a>}}
\if{latex}{\out{\hypertarget{method-CategoricalNB-predict_log_proba}{}}}
\subsection{Method \code{predict_log_proba()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CategoricalNB$predict_log_proba(X)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{X}}{A dataframe containing the preprocessed test set explanatory variables.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A matrix of log probabilities, where each row corresponds to an observation
        and each column to a class.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{Assuming 'X_test' is your preprocessed test dataset
logs_probas <- catnb$predict_log_proba(X_test)

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CategoricalNB-predict_proba"></a>}}
\if{latex}{\out{\hypertarget{method-CategoricalNB-predict_proba}{}}}
\subsection{Method \code{predict_proba()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CategoricalNB$predict_proba(X)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{X}}{A dataframe containing the preprocessed test set explanatory variables.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The dataframe which contains the probabilities.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{Assuming 'X_test' is your preprocessed test dataset
probas <- catnb$predict_proba(X_test)

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CategoricalNB-print"></a>}}
\if{latex}{\out{\hypertarget{method-CategoricalNB-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CategoricalNB$print()}\if{html}{\out{</div>}}
}

\subsection{Details}{
The method checks if the model has been trained and then prints
         the number of classes in the target variable, the number of observations
         in the sample, and the error rate on the training set along with its 95%
         confidence interval. This provides a quick overview of the model's training performance.
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# Assuming the Categorical Naive Bayes model has been trained

catnb$print()

# OR

print(catnb)

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CategoricalNB-summary"></a>}}
\if{latex}{\out{\hypertarget{method-CategoricalNB-summary}{}}}
\subsection{Method \code{summary()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CategoricalNB$summary()}\if{html}{\out{</div>}}
}

\subsection{Details}{
The method checks if the model has been trained.
         It prints details such as the number of classes, class labels, number of features,
         size of the training sample, prior probabilities of each class,
         classifier performance metrics (confusion matrix, error rate, recall, precision) on the training dataset,
         and the classification function (coefficients, intercepts)
         and conditionnal distribution.
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# Assuming the Categorical Naive Bayes model has been trained

catnb$summary()

# OR

summary(catnb)

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CategoricalNB-score"></a>}}
\if{latex}{\out{\hypertarget{method-CategoricalNB-score}{}}}
\subsection{Method \code{score()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CategoricalNB$score(X_test, y_test, verbose = T)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{X_test}}{A dataframe containing the test set explanatory variables.}

\item{\code{y_test}}{A vector containing the actual class labels of the test set.}

\item{\code{verbose}}{A boolean indicating whether to print detailed output (default is TRUE).}

\item{\code{type}}{A string specifying the prediction mode: 'comblin' (default) for linear
combination, 'proba' for probability-based classification.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
The method checks if the model has been trained, predicts class labels for the test set,
         constructs a confusion matrix, and calculates error rate, recall, and precision.
         It also computes a 95% confidence interval for the error rate.
         The results are returned as a list and can optionally be printed in detail.
}

\subsection{Returns}{
A list containing the confusion matrix, error rate, 95% confidence interval for the error rate,
        recall, and precision for each class.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# Assuming 'X_test' and 'y_test' are your test dataset and labels
# Ensure that the model has been trained using fit method

results <- catnb$score(X_test, y_test)

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CategoricalNB-plot_confusionmatrix"></a>}}
\if{latex}{\out{\hypertarget{method-CategoricalNB-plot_confusionmatrix}{}}}
\subsection{Method \code{plot_confusionmatrix()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CategoricalNB$plot_confusionmatrix(X, y_test)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{X}}{A dataframe containing the test set explanatory variables.}

\item{\code{y_test}}{A vector containing the actual class labels of the test set.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
The method first checks if the model has been trained.
         It then predicts the class labels for the test set using the specified prediction type
         and constructs a confusion matrix. This matrix is visualized using the `corrplot` package,
         with a color gradient representing the frequency of each cell in the matrix. The method
         handles missing classes by adding zero-filled columns to ensure a complete matrix.
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# Assuming 'X_test' and 'y_test' are your preprocessed test dataset and actual labels

catnb$plot_confusionmatrix(X_test, y_test)

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CategoricalNB-plot_roccurve"></a>}}
\if{latex}{\out{\hypertarget{method-CategoricalNB-plot_roccurve}{}}}
\subsection{Method \code{plot_roccurve()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CategoricalNB$plot_roccurve(X, y_test, positive = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{X}}{A dataframe containing the preprocessed test set explanatory variables.}

\item{\code{y_test}}{A vector containing the actual class labels of the test set.}

\item{\code{positive}}{An optional parameter specifying the positive class label in a binary classification scenario.
It is required when the model is trained on a binary classification task.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
For multi-class classification (more than two classes), the method generates a One-vs-Rest (OVR)
         multi-class ROC curve. For binary classification, it plots a ROC curve for the specified positive class.
         The Area Under the Curve (AUC) is calculated for each class. The method checks if the model
         has been trained before generating the ROC curve.
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# Assuming 'X_test' and 'y_test' are your preprocessed test dataset and actual labels
# This is the case of a binary classification

catnb$plot_roccurve(X_test, y_test, positive = "YourPositiveClassLabel")

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CategoricalNB-clone"></a>}}
\if{latex}{\out{\hypertarget{method-CategoricalNB-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CategoricalNB$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
